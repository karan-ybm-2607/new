import React, { useState, useEffect } from 'react'
import { makeStyles } from '@material-ui/core/styles';
import { ThemeProvider } from "@material-ui/styles";
import DateFnsUtils from '@date-io/date-fns';
import { TextField, Select, FormControlLabel, Radio, RadioGroup, Typography, InputLabel, FormLabel, MenuItem, FormControl, OutlinedInput, InputAdornment, Button, ButtonGroup } from "@material-ui/core";
import { createTheme } from '@material-ui/core/styles';
import { MuiPickersUtilsProvider, KeyboardDatePicker, } from '@material-ui/pickers';
import { IoCloudUpload } from 'react-icons/io5'
import Edit_Icon from '../../../../Layout/Edit_Icon';
import { API_CONFIG } from '../../../../../lib/API';
import axios from 'axios'
import moment from 'moment'
import CurrencyFormat from 'react-currency-format';
import Styles from './AddEmployeeForm.module.css'
import { THEME_COLOR, THEME_CONFIG } from '../../../../../lib/config';

import Table from "@material-ui/core/Table";
import TableBody from "@material-ui/core/TableBody";
import TableCell from "@material-ui/core/TableCell";
import TableHead from "@material-ui/core/TableHead";
import TableRow from "@material-ui/core/TableRow";
import Paper from "@material-ui/core/Paper";



  const useStyles = makeStyles((theme) => ({
    root: {
        flexGrow :1,
          
        
        "& .MuiFormLabel-root": {
            textTransform: 'capitalize',
            color: '#000',
            backgroundColor: '#fff'
        },
        '& > section> div>*': {
            marginLeft: theme.spacing(1),
            marginRight: theme.spacing(1),
            marginTop: theme.spacing(4),
            marginBottom: theme.spacing(1),
            width: 'calc(50% - 16px)',
        },
        // "& ."
        "& .MuiOutlinedInput-root": {
            "& fieldset": {
                borderRadius: THEME_CONFIG.Theme_border_radius,
                borderColor: THEME_COLOR.Theme_Primary,
                borderWidth: THEME_CONFIG.Theme_border_width
            }, "&.MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline": {
                borderColor: THEME_COLOR.Theme_Primary,
                borderWidth: THEME_CONFIG.Theme_border_width
            },
            "&.Mui-focused fieldset": {
                borderColor: THEME_COLOR.Theme_Primary,
                borderWidth: THEME_CONFIG.Theme_border_width
            }
        },
        '& .HeadingContainer': {
            width: '100%',
        }
    },
   
    devider: {
        borderTop: '2px solid rgba(54, 55, 64, 0.23)',
        width: '100%',
        display: 'block',
        margin: '35px 0',
    },
    formHeading: {
        fontStyle: 'normal',
        fontWeight: 600,
        fontSize: 28,
        lineHeight: '35px',
        letterSpacing: 0.3,
        color: THEME_COLOR.Theme_Primary,
    },
    table: {
        width: '100%',
        marginTop: theme.spacing(4),
        borderSpacing: 0,
        borderTop: `2px solid ${THEME_COLOR.Theme_Primary}`,
        borderBottom: `2px solid ${THEME_COLOR.Theme_Primary}`,
        
    },    
    input: {
        display: 'none',
    },
    uploadIconButton: {
        "& svg": {
            marginLeft: '15px'
        },
        "&:hover": {
            backgroundColor: THEME_COLOR.Theme_Primary,
            color: '#F7F8FC',

        },
        backgroundColor: THEME_COLOR.Theme_Primary,
        border: `2px solid ${THEME_COLOR.Theme_Primary}`,
        borderRadius: THEME_CONFIG.Theme_border_radius,
        fontWeight: '500',
        fontSize: '16px',
        lineHeight: '20px',
        letterSpacing: '0.2px',
        color: '#F7F8FC',
        padding: '5px 25px'
    },
    uploadDoc: {
        fontStyle: 'normal',
        fontWeight: '600',
        fontSize: '22px',
        lineHeight: '28px',
        marginBottom: '8px',
        marginLeft: '15px',
        letterSpacing: '0.2px',
        textTransform: 'capitalize',
    },
       
    btnGroup: {
        width: '100%',
        justifyContent: 'center',
        marginTop: '40px',
    },
    grpBtn: {
        borderRadius: '12px',
        padding: '10px 15px',
        fontStyle: 'normal',
        fontWeight: 600,
        fontSize: '22px',
        lineHeight: '28px',
        letterSpacing: ' 0.2px',
        border: `2px solid ${THEME_COLOR.Theme_Primary}`,
        margin: '10px 25px',
        textTransform: 'capitalize',
    },
    btnOutline: {
        "&:hover": {
            backgroundColor: THEME_COLOR.Theme_Primary,
            color: '#fff',
            border: `2px solid ${THEME_COLOR.Theme_Primary}`,

        },
        color: 'rgba(0, 0, 0, 1)'
    },
    btnStacked: {
        "&:hover": {
            backgroundColor: '#fff',
            color: 'rgba(0, 0, 0, 1)',
            border: `2px solid ${THEME_COLOR.Theme_Primary}`,
        },
        backgroundColor: THEME_COLOR.Theme_Primary,
    },
    RenderData: {
        display: 'flex',
        flexWrap: 'wrap'
    },
    Render: {
        fontSize: 18,
        width: '100%',
        margin: 0
    },
    Bold: {
        fontWeight: 600,
    },
    editDetails: {
        display: 'none',
        marginRight: 15
    },
    HeadingContainers: {
        display: 'flex',
        justifyContent: 'space-between',
        height: 75,
        '&:hover .editBtn': {
            display: 'block'
        },
    },
    Mail: {
        color: THEME_COLOR.Theme_Primary
    }
    
}));
const materialTheme = createTheme({
    overrides: {
        MuiPickersToolbar: {
            toolbar: {
                backgroundColor: "#8bc34a",
            },
        },
        MuiPickersCalendarHeader: {
            switchHeader: {
                backgroundColor: "white",
                color: "#1b5e20",
            },
        },
    },
});

function AddEmployeeForm() {
    const classes = useStyles();
    // console.log(PersonalInfo)

    return (
        <div>
            <form className={classes.root} noValidate autoComplete="off">
                <section>
                    <div className={`HeadingContainer ${classes.HeadingContainers}`}>
                        <Typography className={classes.formHeading} variant="h3" gutterBottom >
                            Salary Structure
                        </Typography>
                        </div>
                        <div>
                        <TextField id="outlined-basic" label="Team Name" variant="outlined" />
                        </div>
                        <Table className={classes.table}>
                            <TableHead>
                            <TableRow>
                                <TableCell>Fruit</TableCell>
                                <TableCell>Fruit</TableCell>
                                
                            </TableRow>
                            </TableHead>
                            <TableBody>
                                
                                    
                               
                            </TableBody>
                        </Table>

                    
                </section>

            </form>
        </div>

    )
}

export default AddEmployeeForm